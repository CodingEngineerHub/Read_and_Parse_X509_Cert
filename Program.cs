using System;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
namespace ReadAndParseCert
{
    class Program
    {
        //this methode converts hez string to ascii
        public static string Hex2Ascii(string hexString)
        {
            StringBuilder sb = new StringBuilder();

            for (int i = 0; i < hexString.Length; i += 2)
            {
                string hs = hexString.Substring(i, 2);
                sb.Append(Convert.ToString(Convert.ToChar(Int32.Parse(hexString.Substring(i, 2), System.Globalization.NumberStyles.HexNumber))));
            }

            return sb.ToString();
        }
        static void Main(string[] args)
        {

            //dont include "--cert begin----" and "--cert end----" part 
            // hexStringCardResponse is ascii response of base64 pem certificate data
            
            
            

string hexStringCardResponse = "4d494945577a434341304f674177494241674951616a476734584e544d4a6b764a5a4a57694a452b656a414e42676b71686b69473977304241517346414441650a4d527777476759445651514445784e7a64324e6e615735304d53356f646d78755a585175626d56304d423458445449784d5445774f44417a4e44497a4e566f580a445449794d44457a4d54417a4e44497a4e466f77475445584d4255474131554541784d4f643364334c6d6476623264735a53356a62323077676745694d4130470a4353714753496233445145424151554141344942447741776767454b416f494241514367424f3245516547536f7773496367694a3048494f4979725039567a540a3730446e70687a4a487a556e31317832342f36774e4a2b436b664f574151724b4c2f374e4d4e3462416e6f6a577a2f7039775172624e784d6f5a512f73394a6d0a727a324c354d594d344867652f415a4c656c4b73334e4a482b624f70776962525379645a737966324d723358784c39556d56375a79624e56596c68446b7432740a563175476d6379506679483333442b4f3061597767426f3068645a3830534a70424e54623562724142623867366e746369642f35307265596d59395a673037520a306b46614d4d575046397379316a43634b6a69594d75304c5141346c51414d4a7664506c384d3667314f7854324932636b436c5a77452f54434e4f5a4e6d55620a326e54652f46503836486f3145656c445161736e4f2b77547a7663375866453955324c716f4a537a4a667931596f736e36647a54444b4a3741674d424141476a0a676747594d4949426c44415a42674e5648524545456a415167673533643363755a3239765a32786c4c6d4e766254414f42674e56485138424166384542414d430a41366777457759445652306c42417777436759494b775942425155484177457744415944565230544151482f424149774144416642674e5648534d45474441570a6742516d3636586d7a6b564b6b3238697458563231547246513037664c6a416442674e5648513445466751556e5963426c64583735674f662b7a6e68434d7a580a2b313165695963776767454342676f724267454541645a35416751434249487a42494877414f3441645142526f3744312f5146356e465a74754464346a77796b0a657377624a3876336e6f68436d67332b314973463551414141587a3932764d3341414145417742474d4551434947736d3234437a754949352f6e7132744d77350a636e354a41484f345638556459436f32315047734c2f32354169412f496b74764f4e2b4d37544d30536d7244743739527538397853614243687637764f764e680a4d5a46303877423141436c35767643654f546b6838465a7a6e324f6c642b572b56333263594172342b5531644a6c776c586365454141414266503361387949410a414151444145597752414967667977392b625853754c4b61776c58735657443436316c33557574466a426d3164452f7277596b6e2f6d6343494778567852736d0a6a4e4949367874506a43726645746535766755644c4e6d546951553669595972764a69584d4130474353714753496233445145424377554141344942415142680a30643555434b425974592b5145653374797a3032625a617146506c34445861576f4a6952524f6f30776b43452b596a4d736e5174353846377949526154396c720a437a564f5964615939616e455435746664425a524d4b637a486c6b3375304b64724e30426d6e306d4e5a50506441486b596a41474d614e3551425542714d74700a38454464436e36336747716747536e31426a52516d644946455a456e366f6f44684e534e50756c42536874706d30706f655a5a69363932732f64444d6e7861490a564e55587531695a48455867547363677a49504f657931315553664e6338384a4e6c6f7477612f65414762454366484f3239524f364b4f794e4674744d4d51390a53304b5446496d7133324234714144666c5a7630484d3154342f6650394e4839423662724a2b545235424133593464415a30786d59435a3859636b48534365780a4e6946654a74684c754b394e2f6a51636365375a";

            string hexStringAscii = Hex2Ascii(hexStringCardResponse);

                  byte[] hexValue = Convert.FromHexString(hexStringCardResponse);
                  X509Certificate certBytes = new X509Certificate(hexValue);

                  // Get the value.
                  string resultsTrue = certBytes.ToString(true);



                  // Display the value to the console.


                  Console.WriteLine(resultsTrue);
                  Console.WriteLine("certBytes.GetFormat():" + certBytes.GetFormat());
                  Console.WriteLine("certBytes.GetHashCode():" + certBytes.GetHashCode());
                  Console.WriteLine("certBytes.GetIssuerName():" + certBytes.GetIssuerName());
                  Console.WriteLine("certBytes.GetKeyAlgorithm():" + certBytes.GetKeyAlgorithm());       
                  Console.WriteLine("certBytes.GetKeyAlgorithmParametersString():" + certBytes.GetKeyAlgorithmParametersString());
                  Console.WriteLine("certBytes.GetPublicKeyString():" + certBytes.GetPublicKeyString());
                  Console.WriteLine("certBytes.GetRawCertDataString():" + certBytes.GetRawCertDataString());
                  Console.WriteLine("certBytes.GetSerialNumberString():" + certBytes.GetSerialNumberString());
                  Console.WriteLine("certBytes.GetType():" + certBytes.GetType());

              




           
            
        }
    }
}
